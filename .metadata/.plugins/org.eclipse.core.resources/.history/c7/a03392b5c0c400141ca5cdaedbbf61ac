/*
 * CAMERA_REGULATOR.H
 *
 *  Created on: 4 mar 2015
 *      Author: szymon
 */

#ifndef CAMERA_REGULATOR_H_
#define CAMERA_REGULATOR_H_

#include <opencv/cv.h>
#include <opencv/cv.h>
#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/calib3d/calib3d.hpp>
#include <opencv2/video.hpp>
#include <opencv2/stitching.hpp>
#include <iostream>
#include "DEF.H"




class CAMERA_REGULATOR
{

private:

	cv::VideoCapture  cap;
	cv::Mat foundedCorners;
	cv::Mat lastFrame;
	CvSize csSize;

	CAMERA_REGULATOR(CAMERA_REGULATOR& cam)
	{
		//todo
	}

	//METHODS

	void receiveFrame()
	{
		cap >> lastFrame;
	}

	cv::Mat& getLastFrame()
	{

		receiveFrame();
		cv::cvtColor(lastFrame,lastFrame,CV_BGR2GRAY);
		return lastFrame;


	}

	bool findChessboard()
		{
			getLastFrame();
			bool founded=cv::findChessboardCorners(lastFrame,csSize,foundedCorners,1);
			return founded;
		}



public:

	CAMERA_REGULATOR(int camera=0,CvSize size=CvSize(8,5)): csSize(size)
	{
		cap.open(camera);
	}

	~CAMERA_REGULATOR()
	{
		cap.release();
	}

	//METHODS



	void run()
	{
		while(true)
		{
			findChessboard();



			if(cv::waitKey(1)==0)
				break;

		}
	}


	void stop()
	{

	}


};





#endif /* CAMERA_REGULATOR_H_ */
