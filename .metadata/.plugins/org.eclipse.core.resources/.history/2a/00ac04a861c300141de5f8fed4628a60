/*
 * CAMERA_REGULATOR.cpp
 *
 *  Created on: 4 mar 2015
 *      Author: szymon
 */




#include <opencv/cv.h>
#include <opencv/cv.h>
#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/calib3d/calib3d.hpp>
#include <opencv2/video.hpp>
#include <opencv2/stitching.hpp>
#include <iostream>
#include "DEF.H"



bool findChessboard(cv::Mat & img)
{

	cv::Mat corners;
    CvSize csSize(8,5);






    bool an=cv::findChessboardCorners(img,csSize,corners,1);

    if(an)
    cv::drawChessboardCorners(img, csSize, corners, 1);;



	return an;
}

int main()
{




    cv::Mat img = cv::imread("Calibration_Grid.png",GRAY_SCALE);




    std::cout << img.type() << CV_8UC3;

    if(img.empty())
    {
    	std::cerr << "Blad otwarcia";
    	return -1;
    }
    std::cout << img.size();



    cv::imshow("OKNO1",img);





	//cv::VideoCapture cap(0);

	//cap >> a;


	//cv::imshow("OKNO",a);

	cv::waitKey();
	return 0;
}
