/*
 * CAMERA_REGULATOR.cpp
 *
 *  Created on: 4 mar 2015
 *      Author: szymon
 */



#include "CAMERA_REGULATOR.H"

#include <opencv/cv.h>
#include <opencv/cv.h>
#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/calib3d/calib3d.hpp>
#include <opencv2/video.hpp>
#include <opencv2/stitching.hpp>
#include <iostream>
#include "DEF.H"



void CAMERA_REGULATOR::receiveFrame()
{
			cap >> lastFrame;
			centerX = lastFrame.cols / 2;
			centerY = lastFrame.rows / 2;
}



bool findChessboard(cv::Mat & img)
{

	cv::Mat corners;
    CvSize csSize(8,5);

    bool an=cv::findChessboardCorners(img,csSize,corners,1);

    //if(an)
    //cv::drawChessboardCorners(img, csSize, corners, 1);



	return an;
}

int main()
{

	CAMERA_REGULATOR regulator;

	regulator.run();


//    cv::Mat img = cv::imread("Calibration_Grid.png",GRAY_SCALE);
//
//    std::cout << img.type() << CV_8UC3;
//
//    if(img.empty())
//    {
//    	std::cerr << "Blad otwarcia";
//    	return -1;
//    }
//
//
//    cv::VideoCapture cap(0);
//
//    while(true)
//    {
//    cap >> img;
//
//    if(!img.empty())
//    {
//
//    	cv::cvtColor(img,img,CV_BGR2GRAY);
//    	findChessboard(img);
//    	cv::imshow("OKNO1",img);
//    	cv::waitKey(1);
//
//    }
//
//    }





	//cv::imshow("OKNO",a);


	return 0;
}
